name: Regression E2E Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write

jobs:
  E2E-Tests-Execution:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Enable Corepack
        run: corepack enable
        shell: bash

      - name: Set up Node.js and Yarn
        uses: actions/setup-node@v4.2.0
        with:
          node-version: .nvmrc
          cache: "yarn"

      - name: Install Correct Yarn Version
        run: yarn set version 4.6.0
        shell: bash

      - name: Cache Yarn Dependencies
        uses: actions/cache@v4.2.1
        with:
          path: |
            .yarn/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --immutable
        shell: bash

      - name: Setup Playwright
        run: yarn playwright install --with-deps
        shell: bash

      - name: Create auth directory
        run: mkdir -p auth
        shell: bash

      - name: Run tests
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        run: yarn playwright test
        continue-on-error: true
        shell: bash

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4.6.0
        with:
          name: allure-results
          path: test-results
          retention-days: 30

      - name: Generate Allure Report
        if: always()
        run: |
          yarn dlx allure-commandline generate allure-results --clean -o allure-report
        shell: bash

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: "allure-report"

  deploy:
    if: always()
    needs: E2E-Tests-Execution
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5